/**
 * Onfido API
 * The Onfido API is used to submit check requests.
 *
 * OpenAPI spec version: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.0.0-beta2
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Address', 'model/Applicant', 'model/ApplicantsList', 'model/Check', 'model/CheckCommon', 'model/CheckWithReportIds', 'model/ChecksList', 'model/Document', 'model/DocumentsList', 'model/Error', 'model/GenericAddress', 'model/GenericAddressesList', 'model/IdNumber', 'model/LivePhoto', 'model/LivePhotosList', 'model/LiveVideo', 'model/LiveVideosList', 'model/Report', 'model/ReportDocument', 'model/ReportOption', 'model/ReportType', 'model/ReportTypeGroup', 'model/ReportTypeGroupsList', 'model/ReportsList', 'model/SdkTokenRequest', 'model/SdkTokenResponse', 'model/Webhook', 'model/WebhooksList', 'api/DefaultApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Address'), require('./model/Applicant'), require('./model/ApplicantsList'), require('./model/Check'), require('./model/CheckCommon'), require('./model/CheckWithReportIds'), require('./model/ChecksList'), require('./model/Document'), require('./model/DocumentsList'), require('./model/Error'), require('./model/GenericAddress'), require('./model/GenericAddressesList'), require('./model/IdNumber'), require('./model/LivePhoto'), require('./model/LivePhotosList'), require('./model/LiveVideo'), require('./model/LiveVideosList'), require('./model/Report'), require('./model/ReportDocument'), require('./model/ReportOption'), require('./model/ReportType'), require('./model/ReportTypeGroup'), require('./model/ReportTypeGroupsList'), require('./model/ReportsList'), require('./model/SdkTokenRequest'), require('./model/SdkTokenResponse'), require('./model/Webhook'), require('./model/WebhooksList'), require('./api/DefaultApi'));
  }
}(function(ApiClient, Address, Applicant, ApplicantsList, Check, CheckCommon, CheckWithReportIds, ChecksList, Document, DocumentsList, Error, GenericAddress, GenericAddressesList, IdNumber, LivePhoto, LivePhotosList, LiveVideo, LiveVideosList, Report, ReportDocument, ReportOption, ReportType, ReportTypeGroup, ReportTypeGroupsList, ReportsList, SdkTokenRequest, SdkTokenResponse, Webhook, WebhooksList, DefaultApi) {
  'use strict';

  /**
   * Client library for the Onfido API..<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var Onfido = require('index'); // See note below*.
   * var xxxSvc = new Onfido.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new Onfido.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new Onfido.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new Onfido.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 4.2.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address: Address,
    /**
     * The Applicant model constructor.
     * @property {module:model/Applicant}
     */
    Applicant: Applicant,
    /**
     * The ApplicantsList model constructor.
     * @property {module:model/ApplicantsList}
     */
    ApplicantsList: ApplicantsList,
    /**
     * The Check model constructor.
     * @property {module:model/Check}
     */
    Check: Check,
    /**
     * The CheckCommon model constructor.
     * @property {module:model/CheckCommon}
     */
    CheckCommon: CheckCommon,
    /**
     * The CheckWithReportIds model constructor.
     * @property {module:model/CheckWithReportIds}
     */
    CheckWithReportIds: CheckWithReportIds,
    /**
     * The ChecksList model constructor.
     * @property {module:model/ChecksList}
     */
    ChecksList: ChecksList,
    /**
     * The Document model constructor.
     * @property {module:model/Document}
     */
    Document: Document,
    /**
     * The DocumentsList model constructor.
     * @property {module:model/DocumentsList}
     */
    DocumentsList: DocumentsList,
    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error: Error,
    /**
     * The GenericAddress model constructor.
     * @property {module:model/GenericAddress}
     */
    GenericAddress: GenericAddress,
    /**
     * The GenericAddressesList model constructor.
     * @property {module:model/GenericAddressesList}
     */
    GenericAddressesList: GenericAddressesList,
    /**
     * The IdNumber model constructor.
     * @property {module:model/IdNumber}
     */
    IdNumber: IdNumber,
    /**
     * The LivePhoto model constructor.
     * @property {module:model/LivePhoto}
     */
    LivePhoto: LivePhoto,
    /**
     * The LivePhotosList model constructor.
     * @property {module:model/LivePhotosList}
     */
    LivePhotosList: LivePhotosList,
    /**
     * The LiveVideo model constructor.
     * @property {module:model/LiveVideo}
     */
    LiveVideo: LiveVideo,
    /**
     * The LiveVideosList model constructor.
     * @property {module:model/LiveVideosList}
     */
    LiveVideosList: LiveVideosList,
    /**
     * The Report model constructor.
     * @property {module:model/Report}
     */
    Report: Report,
    /**
     * The ReportDocument model constructor.
     * @property {module:model/ReportDocument}
     */
    ReportDocument: ReportDocument,
    /**
     * The ReportOption model constructor.
     * @property {module:model/ReportOption}
     */
    ReportOption: ReportOption,
    /**
     * The ReportType model constructor.
     * @property {module:model/ReportType}
     */
    ReportType: ReportType,
    /**
     * The ReportTypeGroup model constructor.
     * @property {module:model/ReportTypeGroup}
     */
    ReportTypeGroup: ReportTypeGroup,
    /**
     * The ReportTypeGroupsList model constructor.
     * @property {module:model/ReportTypeGroupsList}
     */
    ReportTypeGroupsList: ReportTypeGroupsList,
    /**
     * The ReportsList model constructor.
     * @property {module:model/ReportsList}
     */
    ReportsList: ReportsList,
    /**
     * The SdkTokenRequest model constructor.
     * @property {module:model/SdkTokenRequest}
     */
    SdkTokenRequest: SdkTokenRequest,
    /**
     * The SdkTokenResponse model constructor.
     * @property {module:model/SdkTokenResponse}
     */
    SdkTokenResponse: SdkTokenResponse,
    /**
     * The Webhook model constructor.
     * @property {module:model/Webhook}
     */
    Webhook: Webhook,
    /**
     * The WebhooksList model constructor.
     * @property {module:model/WebhooksList}
     */
    WebhooksList: WebhooksList,
    /**
     * The DefaultApi service constructor.
     * @property {module:api/DefaultApi}
     */
    DefaultApi: DefaultApi
  };

  return exports;
}));
